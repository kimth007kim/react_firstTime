6강 Event

6-1 Handling Event

Event: 사건, 특정 사건을 의미(ex 버튼 클릭 이벤트)
<button onClick={activateLasers}>
    Activate Lasers
</button>

DOM에도 이벤트가 있고, React에도 이벤트가 있다.

	HTML
<button onclick="activateLasers()">
    Activate Lasers
</button>

	React
<button onClick={activateLasers}>				//onClick 은 camelCase이다. 낙타 Camel 처음은 소문자 중간에 대문자 React에서 함수 handling할때 camelCase 사용
    Activate Lasers
</button>

Event Handler(EventListener)
-이벤트를 처리하는 함수
-어떤사건이 발생하면 사건을 처리하는 역할

Event Handler 추가하는 법

1.binding
this.handleClick = this.handleClick.bind(this);		//constructor 부분에서 bind 시키기

2.Class Field Syntax 사용
handleClick=()=>{
console.log('this is:',this);
}

3.에로우 function사용 버튼 onlcick에다가 직접 넣음
<button onClick={(e)=>this.handleClick(e)}>
    Click me
</button>

이방식은 로깅버튼이 렌더링될때마다 다른 콜백함수가 생성되는 문제가 있다.
대부분의 경우에는 상관이 없지만, 이 콜백함수가 하위 컴포넌트에 prop에 넘어가게 되면 하위 컴포넌트에서 추가적인 렌더링이 발생
성능문제를 피하기위해서 1,2번 방식을 많이 사용한다.

EventHandler에 Argument 전달하는방법
-Argument: 주장하다. 함수에 주장할내용, 함수에 전달할 데이터(Parameter)

ex) id라는 argument를 deleteRow함수에 전달
<button onCLick={(e) => this.deleteRow(id,e)}>Delete Row</button>		//arrow function id, e argument사용됨
<button onCLick={this.deleteRow.bind(this,id)}>Delete Row</button>		//bind 사용 this, id arugment사용됨

06:24